{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/react/todolist/src/App.js\";\nimport { Component, Fragment } from \"react\";\nimport { CSSTransition } from 'react-transition-group';\nimport './style.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: []\n    };\n    this.handleToggole = this.handleToggole.bind(this);\n    this.handleAddItem = this.handleAddItem.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [this.state.list.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleAddItem,\n        children: \"toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleToggole() {\n    this.setState({\n      show: this.state.show ? false : true\n    });\n  }\n\n  handleAddItem() {\n    this.setState(prevState => {\n      return {\n        list: [...prevState.list, 'item']\n      };\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react/todolist/src/App.js"],"names":["Component","Fragment","CSSTransition","App","constructor","props","state","list","handleToggole","bind","handleAddItem","render","map","item","index","setState","show","prevState"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAO,aAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACxBI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AACDE,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,iBAWY,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoB,CAACC,IAAD,EAAMC,KAAN,KAAgB;AAChC,4BACI;AAAA,oBAAkBD;AAAlB,WAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJD,CAXZ,eAmBI;AAAQ,QAAA,OAAO,EAAE,KAAKJ,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AACDF,EAAAA,aAAa,GAAG;AACZ,SAAKO,QAAL,CAAc;AACVC,MAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWU,IAAX,GAAkB,KAAlB,GAA0B;AADtB,KAAd;AAGH;;AACDN,EAAAA,aAAa,GAAE;AACX,SAAKK,QAAL,CAAeE,SAAD,IAAe;AACzB,aAAO;AACHV,QAAAA,IAAI,EAAC,CAAC,GAAGU,SAAS,CAACV,IAAd,EAAmB,MAAnB;AADF,OAAP;AAGH,KAJD;AAKH;;AA9CuB;;AAgD5B,eAAeJ,GAAf","sourcesContent":["import { Component, Fragment } from \"react\";\nimport { CSSTransition } from 'react-transition-group';\nimport './style.css';\n\nclass App extends Component {\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            list: []\n        }\n        this.handleToggole = this.handleToggole.bind(this);\n        this.handleAddItem = this.handleAddItem.bind(this);\n    }\n    render() {\n        return (\n            <Fragment>\n                {/* <CSSTransition\n                in={this.state.show}\n                timeout={1000}\n                classNames=\"my-node\"\n                onEnter={(el) => {el.style.color = 'blue'}}\n                appear={true}\n                unmountOnExit\n                > */}\n                    {/* <div>hello</div> */}\n                    {\n                        this.state.list.map((item,index) => {\n                            return (\n                                <div key={index}>{item}</div>\n                            )\n                        })\n                    }\n                {/* </CSSTransition> */}\n                {/* <button onClick={this.handleToggole}>toggle</button> */}\n                <button onClick={this.handleAddItem}>toggle</button>\n            </Fragment>\n        )\n    }\n    handleToggole() {\n        this.setState({\n            show: this.state.show ? false : true\n        })\n    }\n    handleAddItem(){\n        this.setState((prevState) => {\n            return {\n                list:[...prevState.list,'item']\n            }\n        })\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}