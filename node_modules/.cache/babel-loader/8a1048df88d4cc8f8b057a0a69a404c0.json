{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/react/todolist/src/App.js\";\nimport { Component, Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './style.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: []\n    };\n    this.handleToggole = this.handleToggole.bind(this);\n    this.handleAddItem = this.handleAddItem.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TransitionGroup, {\n        children: this.state.list.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(CSSTransition, {\n            timeout: 1000,\n            classNames: \"my-node\",\n            onEnter: el => {\n              el.style.color = 'blue';\n            },\n            appear: true,\n            unmountOnExit: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleAddItem,\n        children: \"toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleToggole() {\n    this.setState({\n      show: this.state.show ? false : true\n    });\n  }\n\n  handleAddItem() {\n    this.setState(prevState => {\n      return {\n        list: [...prevState.list, 'item']\n      };\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react/todolist/src/App.js"],"names":["Component","Fragment","CSSTransition","TransitionGroup","App","constructor","props","state","list","handleToggole","bind","handleAddItem","render","map","item","index","el","style","color","setState","show","prevState"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AAEA,OAAO,aAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AACDE,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,8BAGI,QAAC,eAAD;AAAA,kBAEQ,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,8BACI,QAAC,aAAD;AACI,YAAA,OAAO,EAAE,IADb;AAEI,YAAA,UAAU,EAAC,SAFf;AAGI,YAAA,OAAO,EAAGC,EAAD,IAAQ;AAAEA,cAAAA,EAAE,CAACC,KAAH,CAASC,KAAT,GAAiB,MAAjB;AAAyB,aAHhD;AAII,YAAA,MAAM,EAAE,IAJZ;AAKI,YAAA,aAAa,MALjB;AAAA,mCAQI;AAAA,wBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA;AARJ,aAMSC,KANT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAYH,SAbD;AAFR;AAAA;AAAA;AAAA;AAAA,cAHJ,eAuBI;AAAQ,QAAA,OAAO,EAAE,KAAKJ,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2BH;;AACDF,EAAAA,aAAa,GAAG;AACZ,SAAKU,QAAL,CAAc;AACVC,MAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWa,IAAX,GAAkB,KAAlB,GAA0B;AADtB,KAAd;AAGH;;AACDT,EAAAA,aAAa,GAAG;AACZ,SAAKQ,QAAL,CAAeE,SAAD,IAAe;AACzB,aAAO;AACHb,QAAAA,IAAI,EAAE,CAAC,GAAGa,SAAS,CAACb,IAAd,EAAoB,MAApB;AADH,OAAP;AAGH,KAJD;AAKH;;AAlDuB;;AAoD5B,eAAeJ,GAAf","sourcesContent":["import { Component, Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport './style.css';\n\nclass App extends Component {\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            list: []\n        }\n        this.handleToggole = this.handleToggole.bind(this);\n        this.handleAddItem = this.handleAddItem.bind(this);\n    }\n    render() {\n        return (\n            <Fragment>\n\n                {/* <div>hello</div> */}\n                <TransitionGroup>\n                    {\n                        this.state.list.map((item, index) => {\n                            return (\n                                <CSSTransition\n                                    timeout={1000}\n                                    classNames=\"my-node\"\n                                    onEnter={(el) => { el.style.color = 'blue' }}\n                                    appear={true}\n                                    unmountOnExit\n                                    key={index}\n                                >\n                                    <div>{item}</div>\n                                </CSSTransition>\n                            )\n                        })\n                    }\n                </TransitionGroup>\n\n                {/* <button onClick={this.handleToggole}>toggle</button> */}\n                <button onClick={this.handleAddItem}>toggle</button>\n            </Fragment>\n        )\n    }\n    handleToggole() {\n        this.setState({\n            show: this.state.show ? false : true\n        })\n    }\n    handleAddItem() {\n        this.setState((prevState) => {\n            return {\n                list: [...prevState.list, 'item']\n            }\n        })\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}