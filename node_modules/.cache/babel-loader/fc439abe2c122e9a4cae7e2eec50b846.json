{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/react/todolist/src/TodoList.js\";\nimport React, { Component, Fragment } from \"react\";\nimport './style.css';\nimport axios from 'axios';\nimport TodoItem from './TodoItem.js';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      inputValue: '',\n      list: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleItemDelete = this.handleItemDelete.bind(this);\n    this.handleBtnClick = this.handleBtnClick.bind(this);\n    axios.get('http://sleep.daoqihz.com/index/index').then(() => {\n      alert('success');\n    }).catch(() => {\n      alert('error');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"insertArea\",\n          children: \"\\u8F93\\u5165\\u5185\\u5BB9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"insertArea\",\n          className: \"input\",\n          value: this.state.inputValue,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleBtnClick,\n          children: \"\\u63D0\\u4EA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: this.myRef,\n        children: this.getTodoItem()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  getTodoItem() {\n    return this.state.list.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(TodoItem, {\n          content: item,\n          index: item,\n          deleteItem: this.handleItemDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  handleInputChange(e) {\n    const value = e.target.value;\n    this.setState(() => ({\n      inputValue: value\n    }));\n  }\n\n  handleBtnClick() {\n    this.setState(prevState => ({\n      list: [...prevState.list, prevState.inputValue],\n      inputValue: ''\n    }), () => {\n      console.log(this.myRef.current.querySelectorAll('div').length);\n    });\n  }\n\n  handleItemDelete(index) {\n    //    this.state.list.splice(index,1);\n    // const list = [...this.state.list];\n    // list.splice(index, 1);\n    // this.setState({\n    //     list: list\n    // })\n    // 以下为以一个函数的形式，最终通过return返回一个对象， =>{}\n    //上面的例子则是通过=>({}) 即当{}外面还有一对()的时候，则是意思返回()内的对象，取消了return关键字\n    this.setState(prevState => {\n      const list = [...prevState.list];\n      list.splice(index, 1);\n      return {\n        list\n      };\n    });\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react/todolist/src/TodoList.js"],"names":["React","Component","Fragment","axios","TodoItem","TodoList","constructor","props","myRef","createRef","state","inputValue","list","handleInputChange","bind","handleItemDelete","handleBtnClick","get","then","alert","catch","render","getTodoItem","map","item","index","e","value","target","setState","prevState","console","log","current","querySelectorAll","length","splice"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport './style.css';\nimport axios from 'axios';\nimport TodoItem from './TodoItem.js';\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n        this.state = {\n            inputValue: ''\n            , list: []\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleItemDelete = this.handleItemDelete.bind(this);\n        this.handleBtnClick = this.handleBtnClick.bind(this);\n        axios.get('http://sleep.daoqihz.com/index/index').then(()=>{\n            alert('success');\n        })\n        .catch(()=>{\n            alert('error');\n        });\n    }\n    render() {\n        return (\n            <Fragment>\n                <div>\n                    <label htmlFor=\"insertArea\">输入内容</label>\n                    <input\n                        id=\"insertArea\"\n                        className='input'\n                        value={this.state.inputValue}\n                        onChange={this.handleInputChange}\n                        \n                    >\n                    </input>\n                    <button  onClick={this.handleBtnClick}>提交</button>\n                </div>\n                <ul ref={this.myRef}>\n                    {this.getTodoItem()}\n                </ul>\n            </Fragment>\n        )\n    }\n\n\n    getTodoItem() {\n        return this.state.list.map((item, index) => {\n            return (\n                <Fragment>\n                    <TodoItem\n                        content={item}\n                        index={item}\n                        deleteItem={this.handleItemDelete}\n                    />\n\n                </Fragment>\n            )\n        })\n    }\n    handleInputChange(e) {\n        const value = e.target.value;\n        this.setState(() => ({\n            inputValue: value\n        }));\n    }\n    \n    handleBtnClick() {\n        this.setState((prevState) => ({\n            list: [\n                ...prevState.list\n                , prevState.inputValue\n            ]\n            , inputValue: ''\n        }),() => {\n            console.log(this.myRef.current.querySelectorAll('div').length);\n        });\n    }\n    handleItemDelete(index) {\n        //    this.state.list.splice(index,1);\n        // const list = [...this.state.list];\n        // list.splice(index, 1);\n        // this.setState({\n        //     list: list\n        // })\n        // 以下为以一个函数的形式，最终通过return返回一个对象， =>{}\n        //上面的例子则是通过=>({}) 即当{}外面还有一对()的时候，则是意思返回()内的对象，取消了return关键字\n        this.setState((prevState) => {\n            const list = [...prevState.list];\n            list.splice(index, 1);\n            return { list }\n        });\n    }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}